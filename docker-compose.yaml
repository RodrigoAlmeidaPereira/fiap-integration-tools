version: '3.5'
services:
  integration-tools-java-consumer-ms:
    build: 
      context: java-consumer/
      dockerfile: Dockerfile
    image: integration-tools-java-consumer-ms:latest
    container_name: integration-tools-java-consumer-ms
    environment:
      ENV: local
    networks:
      - integration-tools-network


#validar
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
      - integration-tools-network

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - integration-tools-network




# validar





  integration-tools-python-producer-ms:
    build: 
      context: python-producer
      dockerfile: Dockerfile
    image: integration-tools-python-producer:latest
    container_name: integration-tools-python-producer-ms
    networks:
      - integration-tools-network
    environment:
      - ENV=docker

networks:
  integration-tools-network:
    external:
      name: integration-tools-network
